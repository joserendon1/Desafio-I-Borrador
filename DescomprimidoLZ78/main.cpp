#include <iostream>

// Función de descompresión simplificada
void decompressSimple(const unsigned char* compressed, int compressedLen, char* output) {
    char* dict[65536];
    int dictLens[65536];
    int dictSize = 1;
    dict[0] = nullptr;

    int outPos = 0;

    for (int i = 0; i < compressedLen; i += 3) {
        if (i + 2 >= compressedLen) break;

        int idx = (compressed[i] << 8) | compressed[i + 1];
        char ch = compressed[i + 2];

        if (ch == 0) break;

        if (idx == 0) {
            output[outPos++] = ch;
            dict[dictSize] = new char[1];
            dict[dictSize][0] = ch;
            dictLens[dictSize++] = 1;
        } else if (idx < dictSize) {
            for (int j = 0; j < dictLens[idx]; j++) {
                output[outPos++] = dict[idx][j];
            }
            output[outPos++] = ch;

            dict[dictSize] = new char[dictLens[idx] + 1];
            for (int j = 0; j < dictLens[idx]; j++) {
                dict[dictSize][j] = dict[idx][j];
            }
            dict[dictSize][dictLens[idx]] = ch;
            dictLens[dictSize++] = dictLens[idx] + 1;
        }
    }

    output[outPos] = '\0';

    // Limpiar memoria
    for (int i = 1; i < dictSize; i++) {
        delete[] dict[i];
    }
}

int main() {
    // Aquí pegas tu array completo de 1216 bytes
    unsigned char resultado[1216] = {0x00, 0x00, 0x6c, 0x00, 0x00, 0x61, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x6e,
        0x00, 0x00, 0x74, 0x00, 0x02, 0x6e, 0x00, 0x02, 0x73, 0x00, 0x00, 0x65, 0x00, 0x01, 0x65,
        0x00, 0x00, 0x76, 0x00, 0x02, 0x63, 0x00, 0x08, 0x61, 0x00, 0x00, 0x73, 0x00, 0x00, 0x63,
        0x00, 0x00, 0x75, 0x00, 0x00, 0x69, 0x00, 0x00, 0x64, 0x00, 0x02, 0x64, 0x00, 0x08, 0x6d,
        0x00, 0x04, 0x6e, 0x00, 0x06, 0x65, 0x00, 0x0e, 0x62, 0x00, 0x04, 0x73, 0x00, 0x00, 0x71,
        0x00, 0x10, 0x65, 0x00, 0x0e, 0x72, 0x00, 0x11, 0x6f, 0x00, 0x0e, 0x6c, 0x00, 0x02, 0x67,
        0x00, 0x18, 0x61, 0x00, 0x05, 0x69, 0x00, 0x03, 0x61, 0x00, 0x0a, 0x73, 0x00, 0x0e, 0x69,
        0x00, 0x01, 0x76, 0x00, 0x09, 0x73, 0x00, 0x06, 0x72, 0x00, 0x25, 0x70, 0x00, 0x02, 0x6a,
        0x00, 0x02, 0x72, 0x00, 0x18, 0x76, 0x00, 0x04, 0x6c, 0x00, 0x07, 0x64, 0x00, 0x04, 0x61,
        0x00, 0x00, 0x72, 0x00, 0x00, 0x62, 0x00, 0x10, 0x73, 0x00, 0x06, 0x6f, 0x00, 0x0e, 0x66,
        0x00, 0x01, 0x6f, 0x00, 0x2e, 0x65, 0x00, 0x0e, 0x68, 0x00, 0x09, 0x72, 0x00, 0x2f, 0x61,
        0x00, 0x23, 0x6c, 0x00, 0x10, 0x6d, 0x00, 0x11, 0x6e, 0x00, 0x02, 0x70, 0x00, 0x02, 0x69,
        0x00, 0x0e, 0x61, 0x00, 0x00, 0x6a, 0x00, 0x25, 0x6e, 0x00, 0x02, 0x74, 0x00, 0x10, 0x72,
        0x00, 0x02, 0x6c, 0x00, 0x25, 0x63, 0x00, 0x15, 0x73, 0x00, 0x2b, 0x61, 0x00, 0x00, 0x7a,
        0x00, 0x02, 0x6d, 0x00, 0x11, 0x65, 0x00, 0x05, 0x74, 0x00, 0x2d, 0x6c, 0x00, 0x34, 0x64,
        0x00, 0x09, 0x64, 0x00, 0x04, 0x72, 0x00, 0x12, 0x65, 0x00, 0x01, 0x6d, 0x00, 0x10, 0x6e,
        0x00, 0x12, 0x6f, 0x00, 0x02, 0x76, 0x00, 0x09, 0x6e, 0x00, 0x06, 0x75, 0x00, 0x2e, 0x61,
        0x00, 0x23, 0x6e, 0x00, 0x0f, 0x72, 0x00, 0x09, 0x69, 0x00, 0x2f, 0x6c, 0x00, 0x25, 0x65,
        0x00, 0x00, 0x78, 0x00, 0x00, 0x70, 0x00, 0x33, 0x72, 0x00, 0x13, 0x6f, 0x00, 0x34, 0x73,
        0x00, 0x0b, 0x69, 0x00, 0x28, 0x61, 0x00, 0x05, 0x70, 0x00, 0x4d, 0x74, 0x00, 0x36, 0x72,
        0x00, 0x11, 0x74, 0x00, 0x4d, 0x69, 0x00, 0x18, 0x72, 0x00, 0x09, 0x6d, 0x00, 0x04, 0x74,
        0x00, 0x18, 0x64, 0x00, 0x43, 0x75, 0x00, 0x2f, 0x72, 0x00, 0x48, 0x6e, 0x00, 0x51, 0x73,
        0x00, 0x4d, 0x70, 0x00, 0x34, 0x6e, 0x00, 0x4e, 0x6e, 0x00, 0x16, 0x73, 0x00, 0x03, 0x69,
        0x00, 0x0e, 0x74, 0x00, 0x36, 0x69, 0x00, 0x18, 0x68, 0x00, 0x11, 0x73, 0x00, 0x31, 0x72,
        0x00, 0x11, 0x63, 0x00, 0x18, 0x63, 0x00, 0x11, 0x76, 0x00, 0x11, 0x6c, 0x00, 0x11, 0x7a,
        0x00, 0x0c, 0x69, 0x00, 0x15, 0x65, 0x00, 0x3d, 0x6e, 0x00, 0x06, 0x69, 0x00, 0x00, 0x67,
        0x00, 0x10, 0x61, 0x00, 0x74, 0x65, 0x00, 0x0e, 0x6f, 0x00, 0x2e, 0x6f, 0x00, 0x85, 0x63,
        0x00, 0x10, 0x6c, 0x00, 0x31, 0x73, 0x00, 0x2f, 0x69, 0x00, 0x59, 0x69, 0x00, 0x69, 0x65,
        0x00, 0x0f, 0x61, 0x00, 0x0e, 0x70, 0x00, 0x36, 0x64, 0x00, 0x11, 0x64, 0x00, 0x0d, 0x72,
        0x00, 0x16, 0x66, 0x00, 0x0c, 0x74, 0x00, 0x1f, 0x6e, 0x00, 0x81, 0x67, 0x00, 0x10, 0x6f,
        0x00, 0x35, 0x75, 0x00, 0x21, 0x6e, 0x00, 0x90, 0x61, 0x00, 0x4e, 0x73, 0x00, 0x00, 0x68,
        0x00, 0x77, 0x74, 0x00, 0x66, 0x61, 0x00, 0x0e, 0x73, 0x00, 0x6f, 0x72, 0x00, 0x53, 0x64,
        0x00, 0x53, 0x74, 0x00, 0x25, 0x72, 0x00, 0x09, 0x6c, 0x00, 0x40, 0x6f, 0x00, 0x1d, 0x65,
        0x00, 0x82, 0x65, 0x00, 0x05, 0x64, 0x00, 0x08, 0x6c, 0x00, 0x09, 0x79, 0x00, 0xa0, 0x61,
        0x00, 0x32, 0x61, 0x00, 0x49, 0x61, 0x00, 0x0e, 0x6d, 0x00, 0x08, 0x65, 0x00, 0x8e, 0x69,
        0x00, 0x2e, 0x69, 0x00, 0x54, 0x73, 0x00, 0x53, 0x63, 0x00, 0x07, 0x74, 0x00, 0x47, 0x69,
        0x00, 0xa1, 0x6f, 0x00, 0xad, 0x61, 0x00, 0x82, 0x69, 0x00, 0x0f, 0x6f, 0x00, 0x17, 0x72,
        0x00, 0x10, 0x6a, 0x00, 0x75, 0x61, 0x00, 0x21, 0x67, 0x00, 0x11, 0x61, 0x00, 0x05, 0x61,
        0x00, 0x54, 0x72, 0x00, 0x42, 0x65, 0x00, 0x46, 0x61, 0x00, 0x5c, 0x6f, 0x00, 0x4e, 0x72,
        0x00, 0x1f, 0x73, 0x00, 0x53, 0x65, 0x00, 0x2e, 0x67, 0x00, 0xbd, 0x73, 0x00, 0x0e, 0x65,
        0x00, 0x57, 0x65, 0x00, 0x06, 0x61, 0x00, 0x8e, 0x72, 0x00, 0x8c, 0x63, 0x00, 0x0f, 0x69,
        0x00, 0x15, 0x67, 0x00, 0x83, 0x72, 0x00, 0x12, 0x69, 0x00, 0x07, 0x65, 0x00, 0x80, 0x74,
        0x00, 0x11, 0x67, 0x00, 0x96, 0x73, 0x00, 0xd2, 0x75, 0x00, 0x29, 0x69, 0x00, 0x67, 0x69,
        0x00, 0x54, 0x61, 0x00, 0x22, 0x6d, 0x00, 0x9c, 0x65, 0x00, 0xb0, 0x6f, 0x00, 0x9e, 0x65,
        0x00, 0xc9, 0x74, 0x00, 0x18, 0x65, 0x00, 0x0a, 0x6d, 0x00, 0xb5, 0x73, 0x00, 0xbe, 0x74,
        0x00, 0x41, 0x61, 0x00, 0x22, 0x63, 0x00, 0x48, 0x6c, 0x00, 0x18, 0x74, 0x00, 0x29, 0x61,
        0x00, 0x22, 0x6c, 0x00, 0x10, 0x63, 0x00, 0x5a, 0x73, 0x00, 0x26, 0x65, 0x00, 0x01, 0x6c,
        0x00, 0x13, 0x61, 0x00, 0x1d, 0x75, 0x00, 0xbe, 0x6c, 0x00, 0x01, 0x61, 0x00, 0x21, 0x64,
        0x00, 0x52, 0x69, 0x00, 0xb5, 0x61, 0x00, 0x82, 0x75, 0x00, 0x02, 0x66, 0x00, 0x1a, 0x67,
        0x00, 0x04, 0x68, 0x00, 0x39, 0x6f, 0x00, 0x81, 0x65, 0x00, 0x2e, 0x72, 0x00, 0x02, 0x61,
        0x00, 0x01, 0x69, 0x00, 0xa1, 0x61, 0x00, 0x2f, 0x6f, 0x00, 0x0e, 0x71, 0x00, 0x1a, 0x73,
        0x00, 0x07, 0x69, 0x00, 0x21, 0x6c, 0x00, 0x25, 0x61, 0x00, 0x0b, 0x65, 0x00, 0x8e, 0x65,
        0x00, 0x0f, 0x65, 0x00, 0x8e, 0x6c, 0x00, 0xb3, 0x61, 0x00, 0x9e, 0x69, 0x00, 0x24, 0x65,
        0x00, 0x74, 0x72, 0x00, 0x25, 0x68, 0x00, 0x36, 0x62, 0x00, 0x08, 0x63, 0x00, 0x88, 0x74,
        0x00, 0x7b, 0x6f, 0x00, 0x32, 0x72, 0x00, 0x10, 0x74, 0x00, 0xc0, 0x73, 0x01, 0x03, 0x72,
        0x00, 0x12, 0x75, 0x00, 0x55, 0x73, 0x00, 0x9b, 0x6f, 0x00, 0x2e, 0x74, 0x00, 0x42, 0x69,
        0x00, 0xc1, 0x73, 0x00, 0x2b, 0x6f, 0x00, 0x2e, 0x76, 0x00, 0xe0, 0x6f, 0x00, 0x22, 0x70,
        0x00, 0x0a, 0x67, 0x00, 0x5e, 0x6c, 0x00, 0x01, 0x75, 0x00, 0x60, 0x61, 0x00, 0x85, 0x6e,
        0x00, 0xb0, 0x73, 0x00, 0xae, 0x6d, 0x00, 0x04, 0x63, 0x00, 0x1c, 0x6e, 0x00, 0x52, 0x65,
        0x00, 0x49, 0x75, 0x00, 0x34, 0x78, 0x00, 0x5c, 0x6c, 0x00, 0x4d, 0x61, 0x00, 0xcd, 0x6f,
        0x00, 0xa7, 0x65, 0x00, 0x0e, 0x63, 0x00, 0x10, 0x62, 0x00, 0xb0, 0x6d, 0x00, 0x6d, 0x74,
        0x00, 0x04, 0x69, 0x00, 0x05, 0x6d, 0x00, 0x53, 0x73, 0x00, 0x99, 0x64, 0x00, 0x5c, 0x61,
        0x00, 0x77, 0x61, 0x00, 0x3e, 0x65, 0x00, 0x9b, 0x65, 0x00, 0x2e, 0x6d, 0x00, 0x18, 0x6f,
        0x00, 0x16, 0x72, 0x00, 0x70, 0x6f, 0x00, 0x0e, 0x64, 0x00, 0x43, 0x6f, 0x00, 0x05, 0x6f,
        0x00, 0xcd, 0x64, 0x00, 0x18, 0x6e, 0x00, 0x29, 0x72, 0x00, 0x7e, 0x6f, 0x00, 0x05, 0x65,
        0x01, 0x2e, 0x75, 0x00, 0xe0, 0x66, 0x01, 0x07, 0x73, 0x00, 0x81, 0x63, 0x00, 0x18, 0x6d,
        0x00, 0xe6, 0x76, 0x00, 0x7c, 0x6c, 0x01, 0x3b, 0x73, 0x00, 0x3a, 0x63, 0x00, 0x34, 0x69,
        0x00, 0x59, 0x65, 0x00, 0x1b, 0x65, 0x01, 0x18, 0x64, 0x00, 0x13, 0x69, 0x00, 0xbc, 0x69,
        0x00, 0xbe, 0x63, 0x01, 0x26, 0x68, 0x00, 0x9c, 0x6f, 0x00, 0xb0, 0x61, 0x00, 0xa5, 0x79,
        0x00, 0xaa, 0x73, 0x00, 0x68, 0x6f, 0x01, 0x2c, 0x6e, 0x01, 0x36, 0x73, 0x01, 0x26, 0x65,
        0x00, 0xc8, 0x6e, 0x00, 0xb1, 0x69, 0x00, 0x14, 0x6f, 0x00, 0x3d, 0x62, 0x00, 0x36, 0x63,
        0x00, 0x41, 0x69, 0x00, 0x18, 0x69, 0x00, 0x12, 0x61, 0x01, 0x66, 0x70, 0x00, 0x70, 0x64,
        0x00, 0x7d, 0x61, 0x01, 0x38, 0x65, 0x00, 0x5b, 0x70, 0x00, 0x75, 0x65, 0x00, 0x05, 0x63,
        0x00, 0xc7, 0x76, 0x00, 0xbd, 0x6a, 0x00, 0x25, 0x6d, 0x00, 0x50, 0x64, 0x00, 0x2d, 0x76,
        0x00, 0xa1, 0x75, 0x01, 0x15, 0x64, 0x00, 0x6b, 0x62, 0x01, 0x30, 0x69, 0x00, 0xe0, 0x63,
        0x00, 0x15, 0x6f, 0x00, 0xcd, 0x6d, 0x01, 0x31, 0x6f, 0x00, 0x85, 0x72, 0x00, 0x5c, 0x72,
        0x00, 0xa0, 0x65, 0x00, 0x49, 0x65, 0x00, 0x56, 0x74, 0x00, 0x36, 0x61, 0x00, 0x0f, 0x63,
        0x01, 0x5e, 0x73, 0x00, 0x5c, 0x65, 0x00, 0x2e, 0x73, 0x00, 0x15, 0x61, 0x00, 0x22, 0x61,
        0x00, 0x73, 0x73, 0x00, 0xca, 0x64, 0x00, 0x00, 0x66, 0x00, 0xb4, 0x6c, 0x00, 0xbd, 0x72,
        0x00, 0xa2, 0x65, 0x00, 0xef, 0x63, 0x01, 0x82, 0x61, 0x01, 0x89, 0x65, 0x00, 0x0f, 0x74,
        0x00, 0x7b, 0x61, 0x00, 0xc8, 0x6d, 0x01, 0x25, 0x69, 0x01, 0x85, 0x6c, 0x00, 0x09, 0x73
    };

    char texto[10000];
    decompressSimple(resultado, 1216, texto);

    std::cout << "Texto descomprimido: " << texto << std::endl;

    return 0;
}
